class Solution {
public:

    void sub(int i,vector<int> &nums, vector<int> &ds, vector<vector<int>> &ans){
        if(i == nums.size()){
            ans.push_back(ds);
            return;
        }
        ds.push_back(nums[i]);
        sub(i+1,nums,ds,ans);
        ds.pop_back();
        sub(i+1,nums,ds,ans);
    }

    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int> > ans;
        vector<int> ds;
        sub(0,nums,ds,ans);
        sort(ans.begin(), ans.end());
        
        ans.erase(unique(ans.begin(), ans.end()), ans.end());
        return ans;
    }
};
