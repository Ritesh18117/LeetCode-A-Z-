11. Container With Most Water


You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Notice that you may not slant the container.


CODE: 

class Solution {
public:
    int maxArea(vector<int>& height) {
        int maxArea = INT_MIN;
        // for(int i = 0;i < height.size();i++){
        //     for(int j = i + 1;j < height.size();j++){
        //         if(maxArea < (min(height[i],height[j]) * (j - i))){
        //             maxArea = min(height[i],height[j]) * (j - i);
        //         }
        //     }
        // }

        int left = 0;
        int right = height.size() - 1;

        while(left <= right){
            if(maxArea < min(height[left],height[right]) * (right - left)){
                maxArea = min(height[left],height[right]) * (right - left);
            }
            if(height[left] < height[right]){
                left++;
            }else{
                right--;
            }
        }

        return maxArea;
    }
};
