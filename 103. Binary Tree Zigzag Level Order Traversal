/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int> > res;
        if(!root)
            return res;
        
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            int sizee = q.size();
            vector<int> vis;
            while(sizee){
                TreeNode *front = q.front();
                vis.push_back(q.front()->val);
                q.pop();
                if(front->left)
                    q.push(front->left);
                if(front->right)
                    q.push(front->right);
                sizee--;
            }
            res.push_back(vis);
        }

        for(int i = 1;i < res.size();i = i+2){
            reverse(res[i].begin(),res[i].end());
        }
        return res;
    }
};
